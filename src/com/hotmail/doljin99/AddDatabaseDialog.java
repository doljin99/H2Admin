/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.hotmail.doljin99;

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author dolji
 */
public class AddDatabaseDialog extends javax.swing.JDialog {

    private ServerMan serverMan;
    private DatabaseMan databaseMan;

    /**
     * Creates new form AddServerDialog
     *
     * @param parent
     * @param modal
     * @param serverMan
     */
    public AddDatabaseDialog(java.awt.Frame parent, boolean modal, ServerMan serverMan) {
        super(parent, modal);
        initComponents();
        this.serverMan = serverMan;
        
        init();
    }
    
    private void init() {
        setLocationRelativeTo(this);
        jTextFieldServerName.setText(serverMan.getServerName());
        jTextFieldPort.setText(serverMan.getPort());
        jTextFieldBaseDir.setText(serverMan.getBaseDir());
        jCheckBoxAllowOthers.setSelected(serverMan.isTcpAllowOthers());
        jCheckBoxIfNotExists.setSelected(serverMan.isIfNotExists());
        jCheckBoxDaemon.setSelected(serverMan.isTcpDaemon());
        validate();
    }

    public DatabaseMan getDatabaseMan() {
        return databaseMan;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButtonSave = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButtonCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldServerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jCheckBoxDaemon = new javax.swing.JCheckBox();
        jCheckBoxAllowOthers = new javax.swing.JCheckBox();
        jCheckBoxIfNotExists = new javax.swing.JCheckBox();
        jButtonBaseDir = new javax.swing.JButton();
        jTextFieldBaseDir = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDBName = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSetStatus = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DB 추가");

        jToolBar1.setRollover(true);

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/general/Save16.gif"))); // NOI18N
        jButtonSave.setText("저장");
        jButtonSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSave.setFocusable(false);
        jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonSave);
        jToolBar1.add(jSeparator1);

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/general/Stop16.gif"))); // NOI18N
        jButtonCancel.setText("취소");
        jButtonCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCancel.setFocusable(false);
        jButtonCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonCancel);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        jLabel1.setText("서버명");

        jTextFieldServerName.setEditable(false);

        jLabel2.setText("port");

        jTextFieldPort.setEditable(false);
        jTextFieldPort.setText("9092");

        jLabel3.setText("패스워드");

        jPasswordFieldPassword.setEditable(false);

        jCheckBoxDaemon.setSelected(true);
        jCheckBoxDaemon.setText("-tcpDaemon");
        jCheckBoxDaemon.setEnabled(false);

        jCheckBoxAllowOthers.setSelected(true);
        jCheckBoxAllowOthers.setText("-tcpAllowOthers");
        jCheckBoxAllowOthers.setEnabled(false);

        jCheckBoxIfNotExists.setSelected(true);
        jCheckBoxIfNotExists.setText("-ifNotExists");
        jCheckBoxIfNotExists.setEnabled(false);

        jButtonBaseDir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/navigation/Home16.gif"))); // NOI18N
        jButtonBaseDir.setText("base dir");
        jButtonBaseDir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonBaseDir.setEnabled(false);
        jButtonBaseDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBaseDirActionPerformed(evt);
            }
        });

        jTextFieldBaseDir.setEditable(false);
        jTextFieldBaseDir.setText("~");

        jLabel4.setText("DB명");

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("local");
        jRadioButton1.setEnabled(false);

        jRadioButton2.setText("remote");
        jRadioButton2.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(52, 52, 52)
                        .addComponent(jTextFieldPort))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonBaseDir)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordFieldPassword)
                            .addComponent(jTextFieldBaseDir)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(jTextFieldServerName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(23, 23, 23)
                                .addComponent(jRadioButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxDaemon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxAllowOthers)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxIfNotExists)))
                        .addGap(0, 75, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldDBName, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldServerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBaseDir)
                    .addComponent(jTextFieldBaseDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxDaemon)
                    .addComponent(jCheckBoxAllowOthers)
                    .addComponent(jCheckBoxIfNotExists))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDBName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTextAreaSetStatus.setEditable(false);
        jTextAreaSetStatus.setColumns(20);
        jTextAreaSetStatus.setLineWrap(true);
        jTextAreaSetStatus.setRows(5);
        jTextAreaSetStatus.setTabSize(4);
        jTextAreaSetStatus.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaSetStatus);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
         setStatus("취소하였습니다.");
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void setStatus(String msg) {
        jTextAreaSetStatus.append(msg + "\n");
        jTextAreaSetStatus.setCaretPosition(jTextAreaSetStatus.getText().length() - 1);
        jTextAreaSetStatus.validate();
    }

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        String serverTemp = jTextFieldServerName.getText();
        String serverName = (serverTemp == null || serverTemp.isEmpty()) ? "localhost" : serverTemp;
        String portTemp = jTextFieldPort.getText();
        String port = (portTemp == null || portTemp.isEmpty()) ? "9092" : portTemp;
        String baseDirTemp = jTextFieldBaseDir.getText();
        String baseDir = (baseDirTemp == null || baseDirTemp.isEmpty()) ? "~" : baseDirTemp;
        char[] passwordTemp = jPasswordFieldPassword.getPassword();
        String password = (passwordTemp == null || passwordTemp.length < 0) ? "" : new String(passwordTemp);
        String databaseName = jTextFieldDBName.getText();
        if (databaseName == null || databaseName.isEmpty()) {
            setStatus("DB 이름을 입력하세요.");
            return;
        }

        databaseMan = new DatabaseMan(databaseName);
        
        boolean ok = serverMan.connectionTest(databaseName);
        setStatus("접속 결과: " + databaseMan.getMessage());
        if (!ok) {
            databaseMan = null;
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonBaseDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBaseDirActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("base dir 선택");
        chooser.setDialogType(JFileChooser.OPEN_DIALOG);
        chooser.setVisible(true);
        File file = chooser.getSelectedFile();
        if (file == null) {
            setStatus("base dir 설정을 취소하였습니다.");
            return;
        }
        jTextFieldBaseDir.setText(file.getAbsolutePath());
    }//GEN-LAST:event_jButtonBaseDirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDatabaseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDatabaseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDatabaseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDatabaseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AddDatabaseDialog dialog = new AddDatabaseDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBaseDir;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxAllowOthers;
    private javax.swing.JCheckBox jCheckBoxDaemon;
    private javax.swing.JCheckBox jCheckBoxIfNotExists;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JTextArea jTextAreaSetStatus;
    private javax.swing.JTextField jTextFieldBaseDir;
    private javax.swing.JTextField jTextFieldDBName;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldServerName;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
