/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.hotmail.doljin99;

import com.hotmail.doljin99.loginmanager.LoginManager;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author dolji
 */
public class ChangeUserInfoDialog extends javax.swing.JDialog {

    private final ServerMan serverMan;
    private final LoginManager loginManager;

    /**
     * Creates new form ChangeUserInfoDialog
     * @param parent
     * @param modal
     * @param serverMan
     * @param loginManager
     */
    public ChangeUserInfoDialog(java.awt.Frame parent, boolean modal, ServerMan serverMan, LoginManager loginManager) {
        super(parent, modal);
        initComponents();
        this.serverMan = serverMan;
        this.loginManager = loginManager;
        
        init();
    }
    
    private void init() {
        jTextFieldLegacy.setText(serverMan.getRootUser());
        jTextFieldNew.setText(serverMan.getRootUser());
        jPasswordFieldLegacy.setText(serverMan.getRootPassword());
        jPasswordFieldNew.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldLegacy = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNew = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPasswordFieldLegacy = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jPasswordFieldNew = new javax.swing.JPasswordField();
        jCheckBoxLegacy = new javax.swing.JCheckBox();
        jCheckBoxNew = new javax.swing.JCheckBox();
        jButtonChange = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaStatus = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("root사용자 정보 변경");

        jLabel1.setText("기존 사용자 ID");

        jTextFieldLegacy.setEditable(false);

        jLabel2.setText("새 사용자 ID");

        jLabel3.setText("기존 패스워드");

        jPasswordFieldLegacy.setEditable(false);

        jLabel4.setText("새 패스워드");

        jCheckBoxLegacy.setText("보이기");
        jCheckBoxLegacy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLegacyActionPerformed(evt);
            }
        });

        jCheckBoxNew.setText("보이기");
        jCheckBoxNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNewActionPerformed(evt);
            }
        });

        jButtonChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/general/Edit16.gif"))); // NOI18N
        jButtonChange.setText("변경");
        jButtonChange.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/general/Stop16.gif"))); // NOI18N
        jButtonCancel.setText("취소");
        jButtonCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jTextAreaStatus.setEditable(false);
        jTextAreaStatus.setColumns(20);
        jTextAreaStatus.setLineWrap(true);
        jTextAreaStatus.setRows(5);
        jTextAreaStatus.setTabSize(4);
        jTextAreaStatus.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaStatus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLegacy)
                            .addComponent(jTextFieldNew)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordFieldLegacy)
                                    .addComponent(jPasswordFieldNew))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxLegacy)
                                    .addComponent(jCheckBoxNew)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonChange)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldLegacy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxLegacy)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jPasswordFieldLegacy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jPasswordFieldNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxNew))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonChange)
                    .addComponent(jButtonCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxLegacyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLegacyActionPerformed
        if (jCheckBoxLegacy.isSelected()) {
            jPasswordFieldLegacy.setEchoChar((char) 0);
        } else {
            jPasswordFieldLegacy.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBoxLegacyActionPerformed

    private void jCheckBoxNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNewActionPerformed
        if (jCheckBoxNew.isSelected()) {
            jPasswordFieldNew.setEchoChar((char) 0);
        } else {
            jPasswordFieldNew.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBoxNewActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        serverMan.setRootUser(jTextFieldLegacy.getText());
        serverMan.setRootPassword(new String(jPasswordFieldLegacy.getPassword()));
        Connection connection = serverMan.getConnection();
        if (connection == null) {
            setStatus("root 사용자 정보가 틀립니다.");
            return;
        }
        Statement statement = null;
        String legacyUser = jTextFieldLegacy.getText();
        String newUser = jTextFieldNew.getText();
        String newPassword = new String(jPasswordFieldNew.getPassword());
        try {
            connection.setAutoCommit(false);
            statement = connection.createStatement();
            if (!legacyUser.equalsIgnoreCase(newUser)) {
                statement.execute("ALTER USER " + legacyUser + " RENAME TO " + newUser);
                statement.execute("ALTER USER " + newUser + " SET PASSWORD " + "'"  +  newPassword + "'");
            } else {                
                statement.execute("ALTER USER " + newUser + " SET PASSWORD " + "'" + newPassword + "'");
            }
            connection.setAutoCommit(true);
            serverMan.setRootUser(newUser);
            serverMan.setRootPassword(newPassword);
            serverMan.encryptFields(loginManager);
            setStatus(newUser + " 패스워드 정보가 변경되었습니다.");
        } catch (SQLException ex) {            
            setStatus(newUser + " 패스워드 정보 변경에 실패: " + ex.getLocalizedMessage());
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException ex1) {
                }
            }
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException ex1) {
                }
            }            
        }
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void setStatus(String msg) {
        jTextAreaStatus.append(msg + "\n");
        jTextAreaStatus.setCaretPosition(jTextAreaStatus.getText().length() - 1);
        jTextAreaStatus.validate();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JCheckBox jCheckBoxLegacy;
    private javax.swing.JCheckBox jCheckBoxNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordFieldLegacy;
    private javax.swing.JPasswordField jPasswordFieldNew;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaStatus;
    private javax.swing.JTextField jTextFieldLegacy;
    private javax.swing.JTextField jTextFieldNew;
    // End of variables declaration//GEN-END:variables
}
