/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.hotmail.doljin99;

import com.hotmail.doljin99.ScheduledBackupRunnable.ExecuteBackupPool;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dolji
 */
public class BackupScheduleListDialog extends javax.swing.JDialog {

    private final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss");
    private final ExecuteBackupPool pool;

    /**
     * Creates new form BackupScheduleListDialog
     * @param parent
     * @param modal
     * @param pool
     */
    public BackupScheduleListDialog(java.awt.Frame parent, boolean modal, ExecuteBackupPool pool) {
        super(parent, modal);
        initComponents();
        this.pool = pool;
        
        init();
    }
    
    private void init() {
        DefaultTableModel model = (DefaultTableModel) jTableList.getModel();
        model.setRowCount(0);
        Object [] row = new Object[6];
        for (int i = 0; i < pool.size(); i++) {
            ScheduledBackupRunnable.ExecuteBackupScheduleRunnable runnable = pool.get(i);
            row[0] = i + 1;
            row[1] = runnable.getBackupSchedule().getServerName();
            row[2] = runnable.getBackupSchedule().getCronName();
            row[3] = runnable.getBackupSchedule().getDatabaseName();
            row[4] = dateFormat.format(new Date(runnable.getScheduleTime()));
            row[5] = runnable.getBackupSchedule().getBackupDir();
            
            model.addRow(row);
        }
        H2AUtilities.alignColumnWidth(jTableList);
        jTableList.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("정기 백업 대기 목록");

        jTableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "순번", "서버명", "정기 백업명", "데이터베이스명", "일시", "백업디렉터리"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableList);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableList;
    // End of variables declaration//GEN-END:variables
}
