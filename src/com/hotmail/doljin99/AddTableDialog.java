/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.hotmail.doljin99;

import com.hotmail.doljin99.simpleeditor.SimpleEditor;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author dolji
 */
public class AddTableDialog extends javax.swing.JDialog {

    private final ServerMan serverMan;

    private final DatabaseMan databaseMan;
    private final List<String> codeCompletionList;
    
    private SimpleEditor editor;
    
    private boolean changed;
    
    /**
     * Creates new form AddTableDialog
     * @param parent
     * @param modal
     * @param serverMan
     * @param databaseMan
     * @param codeCompletionList
     */
    public AddTableDialog(java.awt.Frame parent, boolean modal, ServerMan serverMan, DatabaseMan databaseMan, List<String> codeCompletionList) {
        super(parent, modal);
        initComponents();
        this.serverMan = serverMan;
        
        this.databaseMan = databaseMan;
        this.codeCompletionList = codeCompletionList;
        
        init();
    }
    
    private void init() {
        changed = false;
        JTextArea jTextAreaSql = new JTextArea();
        jTextAreaSql.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                enableExecute();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                enableExecute();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                enableExecute();
            }            
            void enableExecute() {
                if (jTextAreaSql.getText().length() > 0) {
                    jButtonExecute.setEnabled(true);
                } else {
                    jButtonExecute.setEnabled(false);
                }
            }
        });
        editor = new SimpleEditor(jTextAreaSql, jTextAreaStatus, codeCompletionList);
        H2AUtilities.setCenterComponent(jPanelScript, editor);
        jSplitPane1.setDividerLocation(400);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButtonExecute = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButtonCancel = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanelScript = new javax.swing.JPanel();
        jPanelStatus = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaStatus = new javax.swing.JTextArea();

        setTitle("테이블 추가 SQL 작업 창");

        jToolBar1.setRollover(true);

        jButtonExecute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/media/Play16.gif"))); // NOI18N
        jButtonExecute.setText("실행");
        jButtonExecute.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonExecute.setEnabled(false);
        jButtonExecute.setFocusable(false);
        jButtonExecute.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExecuteActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonExecute);
        jToolBar1.add(jSeparator1);

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/general/Stop16.gif"))); // NOI18N
        jButtonCancel.setText("취소");
        jButtonCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCancel.setFocusable(false);
        jButtonCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonCancel);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanelScript.setLayout(new java.awt.BorderLayout());
        jSplitPane1.setLeftComponent(jPanelScript);

        jPanelStatus.setLayout(new java.awt.BorderLayout());

        jTextAreaStatus.setEditable(false);
        jTextAreaStatus.setColumns(20);
        jTextAreaStatus.setLineWrap(true);
        jTextAreaStatus.setRows(5);
        jTextAreaStatus.setTabSize(4);
        jTextAreaStatus.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaStatus);

        jPanelStatus.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setBottomComponent(jPanelStatus);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExecuteActionPerformed
        Connection connection;
        connection = serverMan.getConnection(databaseMan.getDatabaseName());
        if (connection == null) {
            setStatus("connection 실패: " + serverMan.getJdbcUrl(databaseMan.getDatabaseName()));
            return;
        }
        Statement statement = null;
        try {
            statement = connection.createStatement();
            int count = statement.executeUpdate(editor.getText());
            setStatus(count + " 행 영향을 줌.");
            changed = true;
        } catch (SQLException ex) {
            setStatus("error: "+ ex.getLocalizedMessage());
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException ex) {
                }
            }
            try {
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_jButtonExecuteActionPerformed

    public boolean isChanged() {
        return changed;
    }

    private void setStatus(String msg) {
        jTextAreaStatus.append(msg + "\n");
        jTextAreaStatus.setCaretPosition(jTextAreaStatus.getText().length());
        jTextAreaStatus.validate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExecute;
    private javax.swing.JPanel jPanelScript;
    private javax.swing.JPanel jPanelStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextAreaStatus;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
